try { function sendLogMessageAsync(a, d, c) { try { var b = (document.location.protocol == "https:") ? "https:" : "http:"; b += "//cs.imperium.com/messaging/rvid?"; b += "l=" + a; b += "&m=" + d; if (c !== undefined) { b += "&err=" + c.stack } b += "&c=" + document.getElementById("ClientID").value; b += "&s=" + document.getElementById("SurveyID").value; b += "&p=" + document.getElementById("PanelistID").value; var f = createXMLHttpRequest(); f.open("POST", b); f.send() } catch (e) { console.error(e) } } function createXMLHttpRequest() { if (window.XMLHttpRequest) { return new XMLHttpRequest() } try { return new ActiveXObject("MSXML2.XMLHTTP.6.0") } catch (a) { } try { return new ActiveXObject("MSXML2.XMLHTTP") } catch (a) { } try { return new ActiveXObject("Microsoft.XMLHTTP") } catch (a) { } return null } RVIDTrack = 0; var prot = document.location.protocol; var panelID; var ajaxCall = true; var dev2 = false; var rand_no2 = Math.floor((Math.random() * 100) + 1); var bObj; RVIDClientID = document.getElementById("ClientID").value; if (document.getElementById("PanelID") != null) { panelID = document.getElementById("PanelID").value } else { if (document.getElementById("panelID") != null) { panelID = document.getElementById("panelID").value } else { panelID = "" } } if ((RVIDClientID.substring(0, 8) == "E66F6F89") && (panelID == "")) { document.getElementById("SurveyID").value = "" } RVIDTrack = 1; function setRVIDDataReadyAndSubmitForm() { document.getElementById("RelevantID").value = readRIF(); document.getElementById("RVIDDataReady").value = "1"; document.forms[0].submit() } function callNow() { callCaptureNow() } function callRVIDNow() { try { RVIDTrack = 20; if (document.getElementById("propstr") == null) { createField("propstr") } if (document.getElementById("wm") == null) { createField("wm") } if (document.getElementById("Score") == null) { createField("Score") } if ((document.getElementById("propstr").value == "0") || (document.getElementById("propstr").value == "")) { setTimeout("callRVIDNow1();", 1000) } else { callCaptureNow() } } catch (a) { sendLogMessageAsync("e", "callRVIDNow: An unhandled error occurred.", a); throw a } } function callRVIDNow1() { try { RVIDTrack = 21; if ((document.getElementById("propstr").value == "0") || (document.getElementById("propstr").value == "")) { setTimeout("callRVIDNow2();", 1000) } else { callCaptureNow() } } catch (a) { sendLogMessageAsync("e", "callRVIDNow1: An unhandled error occurred.", a); throw a } } function callRVIDNow2() { try { RVIDTrack = 22; if ((document.getElementById("propstr").value == "0") || (document.getElementById("propstr").value == "")) { setTimeout("callCaptureNow();", 1000) } else { callCaptureNow() } } catch (a) { sendLogMessageAsync("e", "callRVIDNow2: An unhandled error occurred.", a); throw a } } function callCaptureNow() { try { RVIDTrack = 23; if (document.getElementById("wm").value >= 9) { createSol(document.getElementById("propstr").value) } else { executeService(document.getElementById("propstr").value) } } catch (a) { sendLogMessageAsync("e", "callCaptureNow: An unhandled error occurred.", a); throw a } } RVIDTrack = 2; var PluginDetect = { version: "0.7.4", handler: function (f, d, e) { return function () { f(d, e) } }, isDefined: function (a) { return typeof a != "undefined" }, isArray: function (a) { return (/array/i).test(Object.prototype.toString.call(a)) }, isFunc: function (a) { return typeof a == "function" }, isString: function (a) { return typeof a == "string" }, isNum: function (a) { return typeof a == "number" }, isStrNum: function (a) { return (typeof a == "string" && (/\d/).test(a)) }, getNumRegx: /[\d][\d\.\_,-]*/, splitNumRegx: /[\.\_,-]/g, getNum: function (e, h) { var g = this, f = g.isStrNum(e) ? (g.isDefined(h) ? new RegExp(h) : g.getNumRegx).exec(e) : null; return f ? f[0] : null }, compareNums: function (l, n, p) { var o = this, q, j, k, m = parseInt; if (o.isStrNum(l) && o.isStrNum(n)) { if (o.isDefined(p) && p.compareNums) { return p.compareNums(l, n) } q = l.split(o.splitNumRegx); j = n.split(o.splitNumRegx); for (k = 0; k < Math.min(q.length, j.length); k++) { if (m(q[k], 10) > m(j[k], 10)) { return 1 } if (m(q[k], 10) < m(j[k], 10)) { return -1 } } } return 0 }, formatNum: function (f, k) { var j = this, g, h; if (!j.isStrNum(f)) { return null } if (!j.isNum(k)) { k = 4 } k--; h = f.replace(/\s/g, "").split(j.splitNumRegx).concat(["0", "0", "0", "0"]); for (g = 0; g < 4; g++) { if (/^(0+)(.+)$/.test(h[g])) { h[g] = RegExp.$2 } if (g > k || !(/\d/).test(h[g])) { h[g] = "0" } } return h.slice(0, 4).join(",") }, $$hasMimeType: function (b) { return function (j) { if (!b.isIE) { var k, a, h, g = b.isString(j) ? [j] : j; for (h = 0; h < g.length; h++) { if (/[^\s]/.test(g[h]) && (k = navigator.mimeTypes[g[h]]) && (a = k.enabledPlugin) && (a.name || a.description)) { return k } } } return null } }, findNavPlugin: function (o, v, x) { var q = this, s = new RegExp(o, "i"), w = (!q.isDefined(v) || v) ? /\d/ : 0, p = x ? new RegExp(x, "i") : 0, z = navigator.plugins, t = "", u, y, n; for (u = 0; u < z.length; u++) { n = z[u].description || t; y = z[u].name || t; if ((s.test(n) && (!w || w.test(RegExp.leftContext + RegExp.rightContext))) || (s.test(y) && (!w || w.test(RegExp.leftContext + RegExp.rightContext)))) { if (!p || !(p.test(n) || p.test(y))) { return z[u] } } } return null }, getMimeEnabledPlugin: function (g, h) { var j = this, f, k = new RegExp(h, "i"); if ((f = j.hasMimeType(g)) && (f = f.enabledPlugin) && (k.test(f.description || "") || k.test(f.name || ""))) { return f } return 0 }, getPluginFileVersion: function (n, j) { var l = this, o, p, m, k, q = -1; if (l.OS > 2 || !n || !n.version || !(o = l.getNum(n.version))) { return j } if (!j) { return o } o = l.formatNum(o); j = l.formatNum(j); p = j.split(l.splitNumRegx); m = o.split(l.splitNumRegx); for (k = 0; k < p.length; k++) { if (q > -1 && k > q && p[k] != "0") { return j } if (m[k] != p[k]) { if (q == -1) { q = k } if (p[k] != "0") { return j } } } return o }, AXO: window.ActiveXObject, getAXO: function (f) { var g = null, h, e = this; try { g = new e.AXO(f) } catch (h) { } return g }, convertFuncs: function (l) { var j, k, m, e = /^[\$][\$]/, n = {}, o = this; for (j in l) { if (e.test(j)) { n[j] = 1 } } for (j in n) { try { k = j.slice(2); if (k.length > 0 && !l[k]) { l[k] = l[j](l); delete l[j] } } catch (m) { } } }, initScript: function () { var p = this, s = navigator, o = "/", k = s.userAgent || "", m = s.vendor || "", q = s.platform || "", l = s.product || ""; p.OS = (/win/i).test(q) ? 1 : ((/mac/i).test(q) ? 2 : ((/linux/i).test(q) ? 3 : 4)); p.convertFuncs(p); p.isIE = new Function("return " + o + "*@cc_on!@*" + o + "false")(); p.verIE = p.isIE && (/MSIE\s*(\d+\.?\d*)/i).test(k) ? parseFloat(RegExp.$1, 10) : null; p.ActiveXEnabled = false; if (p.isIE) { var n, j = ["Msxml2.XMLHTTP", "Msxml2.DOMDocument", "Microsoft.XMLDOM", "ShockwaveFlash.ShockwaveFlash", "TDCCtl.TDCCtl", "Shell.UIHelper", "Scripting.Dictionary", "wmplayer.ocx"]; for (n = 0; n < j.length; n++) { if (p.getAXO(j[n])) { p.ActiveXEnabled = true; break } } p.head = p.isDefined(document.getElementsByTagName) ? document.getElementsByTagName("head")[0] : null } p.isGecko = (/Gecko/i).test(l) && (/Gecko\s*\/\s*\d/i).test(k); p.verGecko = p.isGecko ? p.formatNum((/rv\s*\:\s*([\.\,\d]+)/i).test(k) ? RegExp.$1 : "0.9") : null; p.isSafari = (/Safari\s*\/\s*\d/i).test(k) && (/Apple/i).test(m); p.isChrome = (/Chrome\s*\/\s*(\d[\d\.]*)/i).test(k); p.verChrome = p.isChrome ? p.formatNum(RegExp.$1) : null; p.isOpera = (/Opera\s*[\/]?\s*(\d+\.?\d*)/i).test(k); p.verOpera = p.isOpera && ((/Version\s*\/\s*(\d+\.?\d*)/i).test(k) || 1) ? parseFloat(RegExp.$1, 10) : null }, init: function (f) { var d = this, e, f; if (!d.isString(f)) { return -3 } if (f.length == 1) { d.getVersionDelimiter = f; return -3 } f = f.toLowerCase().replace(/\s/g, ""); e = d[f]; if (!e || !e.getVersion) { return -3 } d.plugin = e; if (!d.isDefined(e.installed)) { e.installed = e.version = e.version0 = e.getVersionDone = null; e.$ = d; e.pluginName = f } d.garbage = false; if (d.isIE && !d.ActiveXEnabled) { if (e !== d.java) { return -2 } } return 1 }, $$isMinVersion: function (b) { return function (j, k, n, o) { var m = b.init(j), l, a = -1; if (m < 0) { return m } l = b.plugin; k = b.formatNum(b.isNum(k) ? k.toString() : (b.isStrNum(k) ? b.getNum(k) : "0")); if (l.getVersionDone != 1) { l.getVersion(n, o); if (l.getVersionDone === null) { l.getVersionDone = 1 } } b.cleanup(); if (l.installed !== null) { a = l.installed <= 0.5 ? l.installed : (l.version === null ? 0 : (b.compareNums(l.version, k, l) >= 0 ? 1 : -1)) } return a } }, getVersionDelimiter: ",", $$getVersion: function (b) { return function (h, l, m) { var k = b.init(h), j, a; if (k < 0) { return null } j = b.plugin; if (j.getVersionDone != 1) { j.getVersion(l, m); if (j.getVersionDone === null) { j.getVersionDone = 1 } } b.cleanup(); a = (j.version || j.version0); return a ? a.replace(b.splitNumRegx, b.getVersionDelimiter) : a } }, cleanup: function () { }, flash: { mimeType: ["application/x-shockwave-flash", "application/futuresplash"], progID: "ShockwaveFlash.ShockwaveFlash", classID: "clsid:D27CDB6E-AE6D-11CF-96B8-444553540000", getVersion: function () { var s = function (a) { if (!a) { return null } var b = /[\d][\d\,\.\s]*[rRdD]{0,1}[\d\,]*/.exec(a); return b ? b[0].replace(/[rRdD\.]/g, ",").replace(/\s/g, "") : null }; var p, m = this, o = m.$, l, n, e = null, q = null, t = null; if (!o.isIE) { p = o.findNavPlugin("Flash"); if (p && p.description && o.hasMimeType(m.mimeType)) { e = s(p.description) } if (e) { e = o.getPluginFileVersion(p, e) } } else { for (n = 15; n > 2; n--) { q = o.getAXO(m.progID + "." + n); if (q) { t = n.toString(); break } } if (t == "6") { try { q.AllowScriptAccess = "always" } catch (l) { return "6,0,21,0" } } try { e = s(q.GetVariable("$version")) } catch (l) { } if (!e && t) { e = t } } m.installed = e ? 1 : -1; m.version = o.formatNum(e); return true } }, shockwave: { mimeType: "application/x-director", progID: "SWCtl.SWCtl", classID: "clsid:166B1BCA-3F9C-11CF-8075-444553540000", getVersion: function () { var h = null, e = null, j, k, l = this, m = l.$; if (!m.isIE) { k = m.findNavPlugin("Shockwave\\s*for\\s*Director"); if (k && k.description && m.hasMimeType(l.mimeType)) { h = m.getNum(k.description) } if (h) { h = m.getPluginFileVersion(k, h) } } else { try { e = m.getAXO(l.progID).ShockwaveVersion("") } catch (j) { } if (m.isString(e) && e.length > 0) { h = m.getNum(e) } else { if (m.getAXO(l.progID + ".8")) { h = "8" } else { if (m.getAXO(l.progID + ".7")) { h = "7" } else { if (m.getAXO(l.progID + ".1")) { h = "6" } } } } } l.installed = h ? 1 : -1; l.version = m.formatNum(h) } }, silverlight: { mimeType: "application/x-silverlight", progID: "AgControl.AgControl", digits: [9, 20, 9, 12, 31], getVersion: function () { var E = this, F = E.$, x = document, z = null, G = null, D = null, A = true, H = [1, 0, 1, 1, 1], I = [1, 0, 1, 1, 1], y = function (a) { return (a < 10 ? "0" : "") + a.toString() }, t = function (e, f, b, a, c) { return (e + "." + f + "." + b + y(a) + y(c) + ".0") }, s = function (b, c, a) { return d(b, (c == 0 ? a : I[0]), (c == 1 ? a : I[1]), (c == 2 ? a : I[2]), (c == 3 ? a : I[3]), (c == 4 ? a : I[4])) }, d = function (b, e, f, g, a, c) { var c; try { return b.IsVersionSupported(t(e, f, g, a, c)) } catch (c) { } return false }; if (!F.isIE) { var B; if (F.hasMimeType(E.mimeType)) { B = F.isGecko && F.compareNums(F.verGecko, F.formatNum("1.6")) <= 0; if (F.isGecko && B) { A = false } D = F.findNavPlugin("Silverlight.*Plug-?in", 0); if (D && D.description) { z = F.formatNum(D.description) } if (z) { I = z.split(F.splitNumRegx); if (parseInt(I[2], 10) >= 30226 && parseInt(I[0], 10) < 2) { I[0] = "2" } z = I.join(",") } } E.installed = D && A && z ? 1 : (D && A ? 0 : (D ? -0.2 : -1)) } else { G = F.getAXO(E.progID); var v, w, p; if (G && d(G, H[0], H[1], H[2], H[3], H[4])) { for (v = 0; v < E.digits.length; v++) { p = I[v]; for (w = p + (v == 0 ? 0 : 1); w <= E.digits[v]; w++) { if (s(G, v, w)) { A = true; I[v] = w } else { break } } if (!A) { break } } if (A) { z = t(I[0], I[1], I[2], I[3], I[4]) } } E.installed = G && A && z ? 1 : (G && A ? 0 : (G ? -0.2 : -1)) } E.version = F.formatNum(z) } }, zz: 0 }; PluginDetect.initScript(); RVIDTrack = 3; var CaptureString = ""; var userAgent = String(navigator.userAgent); var isIE = (navigator.appVersion.indexOf("MSIE") != -1) ? true : false; if (userAgent.indexOf("Trident/7.0") != -1) { isIE = true } if (userAgent.indexOf("Edge/12.") != -1) { isIE = true } var isWin = (navigator.appVersion.toLowerCase().indexOf("win") != -1) ? true : false; var isMac = (navigator.appVersion.toLowerCase().indexOf("macintosh") != -1) ? true : false; var is_iPhone = (navigator.appVersion.toLowerCase().indexOf("iphone") != -1) ? true : false; var is_iPod = (navigator.appVersion.toLowerCase().indexOf("ipod") != -1) ? true : false; var isLinux = (navigator.appVersion.toLowerCase().indexOf("linux") != -1) ? true : false; var isAndroid = (navigator.appVersion.toLowerCase().indexOf("android") != -1) ? true : false; var isOpera = (userAgent.indexOf("Opera") != -1) ? true : false; var isChrome = (userAgent.indexOf("Chrome") != -1) ? true : false; var isSafari; if (!isChrome) { isSafari = (userAgent.indexOf("Safari") != -1) ? true : false } else { isSafari = false } var isFF = (userAgent.indexOf("Firefox") != -1) ? true : false; var isAOL = (userAgent.indexOf("AOL") != -1) ? true : false; var counter = 0; try { var body1 = document.getElementsByTagName("body"); if (body1[0].style.behavior == "" || body1[0].style.behavior == null) { body1[0].style.behavior = "url(#default#clientCaps)" } } catch (Error) { } RVIDTrack = 4; function addValue(b, a) { counter++; if (CaptureString == "") { CaptureString = a } else { CaptureString = CaptureString + "|" + a } } function getOS() { ma = new Array(); ma[0] = new Array(2); ma[0][0] = "iPhone"; ma[0][1] = "iPhone"; ma[1] = new Array(2); ma[1][0] = "Android"; ma[1][1] = "Android"; ma[2] = new Array(2); ma[2][0] = "Black Berry"; ma[2][1] = "Black Berry"; ma[3] = new Array(2); ma[3][0] = "Windows CE"; ma[3][1] = "Windows CE"; ma[4] = new Array(2); ma[4][0] = "OpenBSD"; ma[4][1] = "Open BSD"; ma[5] = new Array(2); ma[5][0] = "SunOS"; ma[5][1] = "Sun OS"; ma[6] = new Array(2); ma[6][0] = "Linux"; ma[6][1] = "Linux"; ma[7] = new Array(2); ma[7][0] = "X11"; ma[7][1] = "Linux"; ma[8] = new Array(2); ma[8][0] = "QNX"; ma[8][1] = "QNX"; ma[9] = new Array(2); ma[9][0] = "BeOS"; ma[9][1] = "BeOS"; ma[10] = new Array(2); ma[10][0] = "OS/2"; ma[10][1] = "OS/2"; ma[11] = new Array(2); ma[11][0] = "Mac_PowerPC"; ma[11][1] = "Mac OS"; ma[12] = new Array(2); ma[12][0] = "Macintosh"; ma[12][1] = "MacOSX"; ma[13] = new Array(2); ma[13][0] = "Win16"; ma[13][1] = "Windows 3.11"; ma[14] = new Array(2); ma[14][0] = "Windows NT 4.0"; ma[14][1] = "Windows NT 4.0"; ma[15] = new Array(2); ma[15][0] = "WinNT4.0"; ma[15][1] = "Windows NT 4.0"; ma[16] = new Array(2); ma[16][0] = "WinNT"; ma[16][1] = "Windows NT 4.0"; ma[17] = new Array(2); ma[17][0] = "Windows NT"; ma[17][1] = "Windows NT 4.0"; ma[18] = new Array(2); ma[18][0] = "Windows 95"; ma[18][1] = "Windows 95"; ma[19] = new Array(2); ma[19][0] = "Win95"; ma[19][1] = "Windows 95"; ma[20] = new Array(2); ma[20][0] = "Windows_95"; ma[20][1] = "Windows 95"; ma[21] = new Array(2); ma[21][0] = "Windows 98"; ma[21][1] = "Windows 98"; ma[22] = new Array(2); ma[22][0] = "Win98"; ma[22][1] = "Windows 98"; ma[23] = new Array(2); ma[23][0] = "Windows ME"; ma[23][1] = "Windows ME"; ma[24] = new Array(2); ma[24][0] = "Windows NT 5.0"; ma[24][1] = "Windows 2000"; ma[25] = new Array(2); ma[25][0] = "Windows NT 5.01"; ma[25][1] = "Windows 2000"; ma[26] = new Array(2); ma[26][0] = "Windows 2000"; ma[26][1] = "Windows 2000"; ma[27] = new Array(2); ma[27][0] = "Windows NT 5.2"; ma[27][1] = "Windows Server 2003"; ma[28] = new Array(2); ma[28][0] = "Windows XP"; ma[28][1] = "WinXP"; ma[29] = new Array(2); ma[29][0] = "Windows NT 5.1"; ma[29][1] = "WinXP"; ma[30] = new Array(2); ma[30][0] = "Windows NT 6.0"; ma[30][1] = "Windows Vista"; ma[31] = new Array(2); ma[31][0] = "Windows NT 6.1"; ma[31][1] = "Windows 7"; ma[32] = new Array(2); ma[32][0] = "Windows NT 7.0"; ma[32][1] = "Windows 7"; ma[33] = new Array(2); ma[33][0] = "Windows NT 6.2"; ma[33][1] = "Windows 8"; ma[34] = new Array(2); ma[34][0] = "Windows NT 6.3"; ma[34][1] = "Windows 8.1"; ma[35] = new Array(2); ma[35][0] = "Windows NT 10.0"; ma[35][1] = "Windows 10"; var a = "0"; for (i = ma.length - 1; i >= 0; i--) { if (userAgent.indexOf(ma[i][0]) != -1) { a = ma[i][1]; break } } return a } function checkIframes() { var b = document.createElement("iframe"); var a = 0; try { if (b) { a = 1 } } catch (c) { a = 0 } return a } function getSilverlightVersion() { if (isMac || isAndroid || is_iPod || is_iPhone) { return 0 } var a = 0; try { PluginDetect.getVersion("."); a = PluginDetect.getVersion("Silverlight") } catch (b) { a = 0 } if (a == null) { a = 0 } return a } function getSilverlightMajorVersion() { if (isMac || is_iPod || is_iPhone) { return 0 } var a = "0.0"; try { PluginDetect.getVersion("."); a = PluginDetect.getVersion("Silverlight") } catch (b) { a = "0.0" } if (a == undefined || a == null) { a = "0.0" } return a.substring(0, String(a).indexOf(".")) } function detectSilverlight() { var a = false; try { a = PluginDetect.isMinVersion("Silverlight", "0") >= 0 ? true : false } catch (b) { a = false } return (a) ? 1 : 0 } function detectDirector() { var a = false; try { a = PluginDetect.isMinVersion("Shockwave", "0") >= 0 ? true : false } catch (b) { a = false } return (a) ? 1 : 0 } function getDirectorVersion() { var a = 0; try { PluginDetect.getVersion("."); a = PluginDetect.getVersion("Shockwave") } catch (b) { a = 0 } if (a == null) { a = 0 } return a } function getWindowsMediaVersion() { var a = 0; try { if (window.ActiveXObject) { var c = null; try { c = new ActiveXObject("WMPlayer.OCX") } catch (b) { a = 0 } if (c) { a = c.versionInfo } } } catch (b) { a = 0 } return a } function detectWindowsMedia() { var a = false; try { if (canDetectNavigatorPlugins()) { a = detectPlugin("Media Player") } else { if (window.ActiveXObject) { var c = null; try { c = new ActiveXObject("WMPlayer.OCX") } catch (b) { } if (c) { a = true } } } } catch (b) { a = false } return (a) ? 1 : 0 } function isFlip4MacInstalled() { var a = false; try { if (canDetectNavigatorPlugins()) { a = detectPlugin("Flip4Mac") } } catch (b) { a = false } return ((a) ? 1 : 0) } function Flip4MacVersion() { var a = 0; try { if (isFlip4MacInstalled()) { for (var b = 0; b < navigator.plugins.length; b++) { if (navigator.plugins[b].name.indexOf("Flip4Mac") != -1) { var c = navigator.plugins[b].name; var d = c.split(" "); a = d[4]; break } } } } catch (f) { a = 0 } return a } function getFlashInfo() { var b = new Object; b.isInstalled = false; b.version = "0"; try { b.isInstalled = PluginDetect.isMinVersion("Flash", "0") >= 0 ? true : false } catch (a) { b.isInstalled = false } if (b.isInstalled) { try { PluginDetect.getVersion("."); b.version = PluginDetect.getVersion("Flash") } catch (a) { b.version = "0" } if (b.version == null) { b.version = "0" } } return b } function canDetectNavigatorPlugins() { if (navigator.plugins && navigator.plugins.length > 0) { return true } else { return false } } function detectPlugin() { var b = false; try { var c = detectPlugin.arguments; if (navigator.plugins && navigator.plugins.length > 0) { var a = navigator.plugins.length; for (pluginsArrayCounter = 0; pluginsArrayCounter < a; pluginsArrayCounter++) { var f = 0; for (namesCounter = 0; namesCounter < c.length; namesCounter++) { if ((navigator.plugins[pluginsArrayCounter].name.indexOf(c[namesCounter]) >= 0) || (navigator.plugins[pluginsArrayCounter].description.indexOf(c[namesCounter]) >= 0)) { f++ } } if (f == c.length) { b = true; break } } } } catch (d) { b = true } return b } RVIDTrack = 5; var jsver = ""; function createScriptTag(a) { try { var b = document.createElement("script"); if (isOpera) { b.setAttribute("type", "application/javascript;version=" + a) } else { b.setAttribute("language", "Javascript" + a) } b.text = "jsver = " + a + ";"; document.forms[0].appendChild(b) } catch (c) { jsver = "" } } if (jsver == "") { createScriptTag(2.2) } if (jsver == "") { createScriptTag(2.1) } if (jsver == "") { createScriptTag(2) } if (jsver == "") { createScriptTag(1.9) } if (jsver == "") { createScriptTag(1.8) } if (jsver == "") { createScriptTag(1.7) } if (jsver == "") { createScriptTag(1.6) } if (jsver == "") { createScriptTag(1.5) } if (jsver == "") { createScriptTag(1.4) } if (jsver == "") { createScriptTag(1.3) } if (jsver == "") { createScriptTag(1.2) } if (jsver == "") { createScriptTag(1.1) } RVIDTrack = 6; function getJavascriptVersion() { if (isNaN(jsver)) { jsver = -100 } return jsver } var BrowserDetect = { init: function () { this.browser = this.searchString(this.dataBrowser) || "0"; this.version = this.searchVersion(userAgent) || this.searchVersion(navigator.appVersion) || "0" }, searchString: function (d) { for (var a = 0; a < d.length; a++) { var b = d[a].string; var c = d[a].prop; this.versionSearchString = d[a].versionSearch || d[a].identity; if (b) { if (b.indexOf(d[a].subString) != -1) { return d[a].identity } } else { if (c) { return d[a].identity } } } }, searchVersion: function (b) { var a = b.indexOf(this.versionSearchString); if (a == -1) { return } return parseFloat(b.substring(a + this.versionSearchString.length + 1)) }, dataBrowser: [{ string: userAgent, subString: "Edge", identity: "Edge" }, { string: userAgent, subString: "Chrome", identity: "Chrome" }, { string: userAgent, subString: "OmniWeb", versionSearch: "OmniWeb/", identity: "OmniWeb" }, { string: navigator.vendor, subString: "Apple", identity: "Safari", versionSearch: "Version" }, { prop: window.opera, identity: "Opera" }, { string: navigator.vendor, subString: "iCab", identity: "iCab" }, { string: navigator.vendor, subString: "KDE", identity: "Konqueror" }, { string: userAgent, subString: "Firefox", identity: "Firefox" }, { string: navigator.vendor, subString: "Camino", identity: "Camino" }, { string: userAgent, subString: "Netscape", identity: "Netscape" }, { string: userAgent, subString: "MSIE", identity: "IE", versionSearch: "MSIE" }, { string: userAgent, subString: "Gecko", identity: "Mozilla", versionSearch: "rv" }, { string: userAgent, subString: "Mozilla", identity: "Netscape", versionSearch: "Mozilla" }] }; BrowserDetect.init(); function BrowserInfo() { var h = 1000; var c = { Chrome: [/Chrome\/(\S+)/], Safari: [/Version\/(\S+).*?Safari/], IE: [/MSIE (\S+);/], IE: [/Trident\/(\S+);/], Edge: [/Edge\/(\S+)/], Opera: [/Opera\/.*?Version\/(\S+)/, /Opera\/(\S+)/, /Opera (\S+)/], Firefox: [/Firefox\/(\S+)/] }, e, a, d, b; var g = new Object; g.Browser = "0"; g.FullVersion = "0"; g.MinorVersion = "0"; g.MajorVersion = "0"; g.Minorverlet = "0"; g.Version = ""; for (d in c) { while (e = c[d].shift()) { if (a = userAgent.match(e)) { b = (a[1].match(new RegExp("[^.]+(?:.[^.]+){0," + --h + "}")))[0]; g.Browser = d; g.FullVersion = b; var f = b.split("."); g.MinorVersion = (f[1].replace(/[^0-9]/g, "")); g.MajorVersion = (f[0].replace(/[^0-9]/g, "")); g.Version = (f[0].replace(/[^0-9]/g, "")) + "." + (f[1].replace(/[^0-9]/g, "")); g.Minorverlet = String((f[1].replace(/[0-9]/g, ""))).substring(0, 1); break } } } if (g.Browser == "0" || g.Browser == null || g.Browser == undefined) { g.Browser = BrowserDetect.browser } if (g.FullVersion == "0" || g.FullVersion == null || g.FullVersion == undefined) { g.FullVersion = "r" } if (g.Version == "0" || g.Version == null || g.Version == undefined) { g.Version = BrowserDetect.version } if (g.MajorVersion == "0" || g.MajorVersion == null || g.MajorVersion == undefined) { g.MajorVersion = "r" } if (g.MinorVersion == "0" || g.MinorVersion == null || g.MinorVersion == undefined) { g.MinorVersion = "r" } if (g.Minorverlet == "0" || g.Minorverlet == null || g.Minorverlet == undefined) { g.Minorverlet = "" } if (userAgent.indexOf("Trident/7.0") != -1) { g.Version = "11"; g.FullVersion = "11.0" } return g } function Get_Cookie(b) { var g = document.cookie.split(";"); var c = ""; var e = ""; var f = ""; var d = false; var a = ""; for (a = 0; a < g.length; a++) { c = g[a].split("="); e = c[0].replace(/^\s+|\s+$/g, ""); if (e == b) { d = true; if (c.length > 1) { f = unescape(c[1].replace(/^\s+|\s+$/g, "")) } return f; break } c = null; e = "" } if (!d) { return null } } function Set_Cookie(b, g, c, j, d, a) { try { var f = new Date(); f.setTime(f.getTime()); if (c) { c = c * 1000 * 60 * 60 * 24 } var h = new Date(f.getTime() + (c)); document.cookie = b + "=" + escape(g) + ((c) ? ";expires=" + h.toGMTString() : "") + ((j) ? ";path=" + j : "") + ((d) ? ";domain=" + d : "") + ((a) ? ";secure" : "") } catch (e) { } } function GetFontSize() { var c = "myinput"; var b = "text"; var g = "getting the text size"; var a = 0; try { var f = document.createElement("input"); f.setAttribute("type", b); f.setAttribute("id", c); f.setAttribute("outerText", g); a = f.size } catch (d) { a = 0 } return a } function getTimeZoneDiff() { var b = new Date(); var a = (-b.getTimezoneOffset() / 60); if (isNaN(a)) { ver = -100 } return a } function getJavaScriptBuild() { var a = 0; if (isIE) { try { a = ScriptEngineMajorVersion() + "." + ScriptEngineMinorVersion() + "." + ScriptEngineBuildVersion() } catch (b) { a = 0 } } return a } function getBrowserBuild() { var b = 0; if (isIE) { try { b = body1[0].getComponentVersion("{89820200-ECBD-11CF-8B85-00AA005B4383}", "ComponentID"); if (b == "" || b == undefined) { b = 0 } } catch (a) { b = 0 } } if (b == 0) { return 0 } else { return String(b).replace(/,/gi, ".") } } function getNetMeetingBuild() { var b = 0; if (isIE) { try { b = body1[0].getComponentVersion("{44BBA842-CC51-11CF-AAFA-00AA00B6015B}", "ComponentID"); if (b == "" || b == undefined) { b = 0 } } catch (a) { b = 0 } } if (b == 0) { return 0 } else { return String(b).replace(/,/gi, ".") } } function getServicePack() { var a = 0; if (navigator.appMinorVersion) { a = navigator.appMinorVersion } return a } function getUserLanguage() { var a; if (navigator.userLanguage) { a = navigator.userLanguage } else { if (navigator.language) { a = navigator.language } } return a } function getSystemLanguage() { var a; if (navigator.systemLanguage) { a = navigator.systemLanguage } else { a = 0 } return a } function detectGecko() { var a = false; if (navigator.product) { if (navigator.product == "Gecko") { a = true } } return a } function getGeckoBuildDateToInt() { var a = "0"; try { if (detectGecko()) { a = navigator.buildID; if (isNaN(a)) { a = "0" } } } catch (b) { a = "0" } return String(a).replace("'", "") } function getConnectionType() { var a = 0; try { a = body1[0].connectionType; if (a == undefined) { a = 0 } } catch (b) { a = 0 } return a } function supportsDHTML() { var a = false; try { if (document.getElementById || document.all || document.layers || document.createElement) { a = true } } catch (b) { a = false } return a } function supportsXMLHttpRequest() { var a = false; try { if (XMLHttpRequest) { a = true } } catch (b) { a = false } return a } function supportsXML() { var a = false; try { if (window.ActiveXObject) { try { var b = new ActiveXObject("Microsoft.XMLDOM"); if (b) { a = true } } catch (c) { a = false } } else { if (document.implementation && document.implementation.createDocument) { var b = document.implementation.hasFeature("XML", null); a = true } } } catch (c) { a = false } return a } function getAolVersion() { var a = 0; if (isAOL) { try { a = userAgent; a = a.substring(a.indexOf("AOL") + 4); a = a.substring(0, a.indexOf(";")) } catch (b) { a = 0 } } if (isNaN(a)) { a = -100 } return a } function isEmailCrawler() { var a = false; if (userAgent.indexOf("crawler") != -1 || userAgent.indexOf("spider") != -1 || userAgent.indexOf("bot") != -1) { a = true } return a } function canUploadFile() { var b = "Yes"; var a = document.createElement("input"); a.setAttribute("type", "file"); a.setAttribute("name", "raUploadTest"); if (!a) { b = "No" } return b } function persistentCookies() { var a = 0; Set_Cookie("ratest", "it works", "", "/", "", ""); if (Get_Cookie("ratest")) { a = 1 } return a } function sessionCookies() { var a = 0; Set_Cookie("ratest", "it works", "", "/", "", ""); if (Get_Cookie("ratest")) { a = 1 } return a } function getDataPoints() { RVIDTrack = 16; isThisMobile = isMobile(); browserobject = BrowserInfo(); addValue("activexcontrols", "0"); addValue("activexenabled", "0"); addValue("aol", "0"); addValue("aolversion", getAolVersion()); addValue("authorware", 0); addValue("beta", "0"); addValue("browserbuild", getBrowserBuild()); addValue("browser", browserobject.Browser); addValue("citrix", 0); addValue("colordepth", screen.colorDepth); addValue("compressgzip", "0"); addValue("connectiontype", getConnectionType()); addValue("country", 0); addValue("countryname", 0); addValue("crawler", "0"); addValue("dhtml", supportsDHTML()); addValue("director", detectDirector()); addValue("directorverex", getDirectorVersion()); addValue("displayxdpiactual", ((isIE) ? screen.deviceXDPI : 0)); addValue("displayxdpilogical", ((isIE) ? screen.logicalXDPI : 0)); addValue("displayydpiactual", ((isIE) ? screen.deviceYDPI : 0)); addValue("displayydpilogical", ((isIE) ? screen.logicalYDPI : 0)); addValue("emailcrawler", isEmailCrawler()); addValue("fileupload", canUploadFile()); var b = getFlashInfo(); var a = b.version.indexOf("."); addValue("flash", b.version.substring(0, (a == -1 ? 1 : a))); addValue("flashverex", b.version); addValue("Flip4Mac", Flip4MacVersion()); addValue("fontsmoothing", ((screen.fontSmoothingEnabled) ? 1 : 0)); addValue("fullversion", browserobject.FullVersion); addValue("geckoBuildDate", getGeckoBuildDateToInt()); addValue("gecko", detectGecko()); addValue("hdml", "0"); addValue("height", screen.height); addValue("heightavail", screen.availHeight); addValue("iframes", checkIframes()); addValue("ipaddr", "0"); addValue("ipixviewer", 0); addValue("isAvailable", 1); RVIDTrack = 17; addValue("javaapplets", "0"); addValue("javaenabled", navigator.javaEnabled()); addValue("javascriptbuild", getJavaScriptBuild()); addValue("javascriptenabled", 1); addValue("javascriptver", "0"); addValue("langsystem", getSystemLanguage()); addValue("language", "0"); addValue("languser", getUserLanguage()); addValue("majorver", browserobject.MajorVersion); addValue("mapguide", 0); addValue("mediaplayer", detectWindowsMedia()); addValue("mediaplayerverex", getWindowsMediaVersion()); addValue("minorver", browserobject.MinorVersion); addValue("minorverlet", browserobject.Minorverlet); addValue("msxml", 0); addValue("netclrinstalled", "0"); addValue("netclrversion", "0"); addValue("netmeetingbuild", getNetMeetingBuild()); addValue("pda", isThisMobile[0]); addValue("persistentcookies", persistentCookies()); if (isThisMobile[0] == 1) { addValue("platform", isThisMobile[1]) } else { addValue("platform", getOS()) } addValue("png", "0"); addValue("proxy", "0"); addValue("proxystring", "0"); addValue("referrer", 0); addValue("servicepack", getServicePack()); addValue("sessioncookies", sessionCookies()); addValue("silverlight", getSilverlightMajorVersion()); addValue("silverlightverex", getSilverlightVersion()); addValue("ssl", 1); addValue("sslactive", ((String(document.location.protocol).indexOf("https") != -1) ? 1 : 0)); addValue("svgviewer", 0); addValue("textsize", GetFontSize()); addValue("timezonediff", getTimeZoneDiff()); addValue("vbscript", "0"); addValue("vbscriptenabled", "0"); addValue("version", browserobject.Version); addValue("viewpoint", 0); addValue("wap", "0"); addValue("wapdevicemodel", "0"); addValue("wapgateway", "0"); addValue("wapmaxdecksize", "0"); addValue("wapsubscriberid", "0"); addValue("width", screen.width); addValue("widthavail", screen.availWidth); addValue("wininstallerminver", "0"); addValue("xml", supportsXML()); addValue("xmlhttprequest", supportsXMLHttpRequest()); RVIDTrack = 18; if (document.getElementById("propstr") == null) { var e = document; var d = document.forms[0]; var c = e.createElement("input"); c.style.width = "400px"; c.type = "text"; c.style.display = "none"; c = d.appendChild(c); c.name = "propstr"; c.id = "propstr" } if (document.getElementById("wm") == null) { var e = document; var d = document.forms[0]; var c = e.createElement("input"); c.style.width = "400px"; c.type = "text"; c.style.display = "none"; c = d.appendChild(c); c.name = "wm"; c.id = "wm" } document.getElementById("propstr").value = CaptureString; document.getElementById("wm").value = Number(b.version.substring(0, (a == -1 ? 1 : a))); RVIDTrack = 19 } var propertyString1 = ""; RVIDTrack = 7; if (typeof deconcept == "undefined") { var deconcept = new Object() } if (typeof deconcept.util == "undefined") { deconcept.util = new Object() } if (typeof deconcept.SWFObjectUtil == "undefined") { deconcept.SWFObjectUtil = new Object() } deconcept.SWFObject = function (n, b, o, e, k, l, g, f, d, m) { if (!document.getElementById) { return } this.DETECT_KEY = m ? m : "detectflash"; this.skipDetect = deconcept.util.getRequestParameter(this.DETECT_KEY); this.params = new Object(); this.variables = new Object(); this.attributes = new Array(); if (n) { this.setAttribute("swf", n) } if (b) { this.setAttribute("id", b) } if (o) { this.setAttribute("width", o) } if (e) { this.setAttribute("height", e) } if (k) { this.setAttribute("version", new deconcept.PlayerVersion(k.toString().split("."))) } this.installedVer = deconcept.SWFObjectUtil.getPlayerVersion(); if (!window.opera && document.all && this.installedVer.major > 7) { deconcept.SWFObject.doPrepUnload = true } if (l) { this.addParam("bgcolor", l) } var a = g ? g : "high"; this.addParam("quality", a); this.setAttribute("useExpressInstall", false); this.setAttribute("doExpressInstall", false); var j = (f) ? f : window.location; this.setAttribute("xiRedirectUrl", j); this.setAttribute("redirectUrl", ""); if (d) { this.setAttribute("redirectUrl", d) } }; deconcept.SWFObject.prototype = { useExpressInstall: function (a) { this.xiSWFPath = !a ? "expressinstall.swf" : a; this.setAttribute("useExpressInstall", true) }, setAttribute: function (a, b) { this.attributes[a] = b }, getAttribute: function (a) { return this.attributes[a] }, addParam: function (b, a) { this.params[b] = a }, getParams: function () { return this.params }, addVariable: function (b, a) { this.variables[b] = a }, getVariable: function (a) { return this.variables[a] }, getVariables: function () { return this.variables }, getVariablePairs: function () { var c = new Array(); var b; var a = this.getVariables(); for (b in a) { c[c.length] = b + "=" + a[b] } return c }, getSWFHTML: function () { var b = ""; if (navigator.plugins && navigator.mimeTypes && navigator.mimeTypes.length) { if (this.getAttribute("doExpressInstall")) { this.addVariable("MMplayerType", "PlugIn"); this.setAttribute("swf", this.xiSWFPath) } b = '<embed type="application/x-shockwave-flash" src="' + this.getAttribute("swf") + '" width="' + this.getAttribute("width") + '" height="' + this.getAttribute("height") + '" style="' + this.getAttribute("style") + '"'; b += ' id="' + this.getAttribute("id") + '" name="' + this.getAttribute("id") + '" '; var f = this.getParams(); for (var e in f) { b += [e] + '="' + f[e] + '" ' } var d = this.getVariablePairs().join("&"); if (d.length > 0) { b += 'flashvars="' + d + '"' } b += "/>" } else { if (this.getAttribute("doExpressInstall")) { this.addVariable("MMplayerType", "ActiveX"); this.setAttribute("swf", this.xiSWFPath) } b = '<object id="' + this.getAttribute("id") + '" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="' + this.getAttribute("width") + '" height="' + this.getAttribute("height") + '" style="' + this.getAttribute("style") + '">'; b += '<param name="movie" value="' + this.getAttribute("swf") + '" />'; var c = this.getParams(); for (var e in c) { b += '<param name="' + e + '" value="' + c[e] + '" />' } var a = this.getVariablePairs().join("&"); if (a.length > 0) { b += '<param name="flashvars" value="' + a + '" />' } b += "</object>" } return b }, write: function (b) { if (this.getAttribute("useExpressInstall")) { var a = new deconcept.PlayerVersion([6, 0, 65]); if (this.installedVer.versionIsValid(a) && !this.installedVer.versionIsValid(this.getAttribute("version"))) { this.setAttribute("doExpressInstall", true); this.addVariable("MMredirectURL", escape(this.getAttribute("xiRedirectUrl"))); document.title = document.title.slice(0, 47) + " - Flash Player Installation"; this.addVariable("MMdoctitle", document.title) } } if (this.skipDetect || this.getAttribute("doExpressInstall") || this.installedVer.versionIsValid(this.getAttribute("version"))) { var c = (typeof b == "string") ? document.getElementById(b) : b; c.innerHTML = this.getSWFHTML(); return true } else { if (this.getAttribute("redirectUrl") != "") { document.location.replace(this.getAttribute("redirectUrl")) } } return false } }; deconcept.SWFObjectUtil.getPlayerVersion = function () { var f = new deconcept.PlayerVersion([0, 0, 0]); if (navigator.plugins && navigator.mimeTypes.length) { var a = navigator.plugins["Shockwave Flash"]; if (a && a.description) { f = new deconcept.PlayerVersion(a.description.replace(/([a-zA-Z]|\s)+/, "").replace(/(\s+r|\s+b[0-9]+)/, ".").split(".")) } } else { if (navigator.userAgent && navigator.userAgent.indexOf("Windows CE") >= 0) { var b = 1; var c = 3; while (b) { try { c++; b = new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + c); f = new deconcept.PlayerVersion([c, 0, 0]) } catch (d) { b = null } } } else { try { var b = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7") } catch (d) { try { var b = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6"); f = new deconcept.PlayerVersion([6, 0, 21]); b.AllowScriptAccess = "always" } catch (d) { if (f.major == 6) { return f } } try { b = new ActiveXObject("ShockwaveFlash.ShockwaveFlash") } catch (d) { } } if (b != null) { f = new deconcept.PlayerVersion(b.GetVariable("$version").split(" ")[1].split(",")) } } } return f }; deconcept.PlayerVersion = function (a) { this.major = a[0] != null ? parseInt(a[0]) : 0; this.minor = a[1] != null ? parseInt(a[1]) : 0; this.rev = a[2] != null ? parseInt(a[2]) : 0 }; deconcept.PlayerVersion.prototype.versionIsValid = function (a) { if (this.major < a.major) { return false } if (this.major > a.major) { return true } if (this.minor < a.minor) { return false } if (this.minor > a.minor) { return true } if (this.rev < a.rev) { return false } return true }; deconcept.util = { getRequestParameter: function (c) { var d = document.location.search || document.location.hash; if (c == null) { return d } if (d) { var b = d.substring(1).split("&"); for (var a = 0; a < b.length; a++) { if (b[a].substring(0, b[a].indexOf("=")) == c) { return b[a].substring((b[a].indexOf("=") + 1)) } } } return "" } }; deconcept.SWFObjectUtil.cleanupSWFs = function () { var b = document.getElementsByTagName("OBJECT"); for (var c = b.length - 1; c >= 0; c--) { b[c].style.display = "none"; for (var a in b[c]) { if (typeof b[c][a] == "function") { b[c][a] = function () { } } } } }; if (deconcept.SWFObject.doPrepUnload) { if (!deconcept.unloadSet) { deconcept.SWFObjectUtil.prepUnload = function () { __flash_unloadHandler = function () { }; __flash_savedUnloadHandler = function () { }; window.attachEvent("onunload", deconcept.SWFObjectUtil.cleanupSWFs) }; window.attachEvent("onbeforeunload", deconcept.SWFObjectUtil.prepUnload); deconcept.unloadSet = true } } if (!document.getElementById && document.all) { document.getElementById = function (a) { return document.all[a] } } var getQueryParamValue = deconcept.util.getRequestParameter; var FlashObject = deconcept.SWFObject; var objectSWF = deconcept.SWFObject; RVIDTrack = 9; try { ZZZ = (function () { var e = "0.1.0", d, g, a, f, c, b; b = (function () { var p = "Thu, 01-Jan-1970 00:00:01 GMT", j = 1000 * 60 * 60 * 24, q = ["expires", "path", "domain"], l = escape, k = unescape, o = document, m; var s = function () { var t = new Date(); t.setTime(t.getTime()); return t }; var h = function (w, z) { var v, u, y, x = [], t = (arguments.length > 2) ? arguments[2] : {}; x.push(l(w) + "=" + l(z)); for (v = 0; v < q.length; v++) { u = q[v]; if (y = t[u]) { x.push(u + "=" + y) } } if (t.secure) { x.push("secure") } return x.join("; ") }; var n = function () { var u = "__EC_TEST__", t = new Date(); t = t.toGMTString(); this.set(u, t); this.enabled = (this.remove(u) == t); return this.enabled }; m = { set: function (x, A) { var w = (arguments.length > 2) ? arguments[2] : {}, v = s(), u, t = {}; if (w.expires) { w.expires *= j; t.expires = new Date(v.getTime() + w.expires); t.expires = t.expires.toGMTString() } var z = ["path", "domain", "secure"]; for (i = 0; i < z.length; i++) { if (w[z[i]]) { t[z[i]] = w[z[i]] } } var y = h(x, A, t); o.cookie = y; return A }, has: function (u) { u = l(u); var x = o.cookie, w = x.indexOf(u + "="), t = w + u.length + 1, v = x.substring(0, u.length); return ((!w && u != v) || w < 0) ? false : true }, get: function (v) { v = l(v); var y = o.cookie, x = y.indexOf(v + "="), t = x + v.length + 1, w = y.substring(0, v.length), u; if ((!x && v != w) || x < 0) { return null } u = y.indexOf(";", t); if (u < 0) { u = y.length } return k(y.substring(t, u)) }, remove: function (t) { var v = m.get(t), u = { expires: p }; o.cookie = h(t, "", u); return v }, keys: function () { var x = o.cookie, w = x.split("; "), t, v, u = []; for (t = 0; t < w.length; t++) { v = w[t].split("="); u.push(k(v[0])) } return u }, all: function () { var x = o.cookie, w = x.split("; "), t, v, u = []; for (t = 0; t < w.length; t++) { v = w[t].split("="); u.push([k(v[0]), k(v[1])]) } return u }, version: "0.2.1", enabled: false }; m.enabled = n.call(m); return m }()); c = function () { }; a = function (h) { return "PS" + h.replace(/_/g, "__").replace(/ /g, "_s") }; C = { search_order: ["ie", "localstorage", "whatwg_db", "globalstorage"], name_re: /^[a-z][a-z0-9_ -]+$/i, methods: ["init", "get", "set", "remove", "load", "save"], sql: { version: "1", create: "CREATE TABLE IF NOT EXISTS persist_data (k TEXT UNIQUE NOT NULL PRIMARY KEY, v TEXT NOT NULL)", get: "SELECT v FROM persist_data WHERE k = ?", set: "INSERT INTO persist_data(k, v) VALUES (?, ?)", remove: "DELETE FROM persist_data WHERE k = ?" }, flash: { div_id: "_persist_flash_wrap", id: "_persist_flash", path: "persist.swf", size: { w: 1, h: 1 }, args: { autostart: true } } }; g = { gears: { size: -1, test: function () { return (window.google && window.google.gears) ? true : false }, methods: { transaction: function (j) { var h = this.db; h.execute("BEGIN").close(); j.call(this, h); h.execute("COMMIT").close() }, init: function () { var h; h = this.db = google.gears.factory.create("beta.database"); h.open(a(this.name)); h.execute(C.sql.create).close() }, get: function (h, k, j) { var l, m = C.sql.get; if (!k) { return } this.transaction(function (n) { l = n.execute(m, [h]); if (l.isValidRow()) { k.call(j || this, true, l.field(0)) } else { k.call(j || this, false, null) } l.close() }) }, set: function (j, o, l, k) { var h = C.sql.remove, n = C.sql.set, m; this.transaction(function (p) { p.execute(h, [j]).close(); p.execute(n, [j, o]).close(); if (l) { l.call(k || this, true, o) } }) }, remove: function (h, k, j) { var l = C.sql.get; sql = C.sql.remove, r, val; this.transaction(function (m) { if (k) { r = m.execute(l, [h]); if (r.isValidRow()) { val = r.field(0); m.execute(sql, [h]).close(); k.call(j || this, true, val) } else { k.call(j || this, false, null) } r.close() } else { m.execute(sql, [h]).close() } }) } } }, whatwg_db: { size: 200 * 1024, test: function () { var h = "PersistJS Test", j = "Persistent database test."; if (!window.openDatabase) { return false } if (!window.openDatabase(h, C.sql.version, j, g.whatwg_db.size)) { return false } return true }, methods: { transaction: function (h) { if (!this.db_created) { var j = C.sql.create; this.db.transaction(function (k) { k.executeSql(j, [], function () { this.db_created = true }) }, c) } this.db.transaction(h) }, init: function () { var j, h; j = this.o.about || "Persistent storage for " + this.name; h = this.o.size || g.whatwg_db.size; this.db = openDatabase(this.name, C.sql.version, j, h) }, get: function (h, k, j) { var l = C.sql.get; if (!k) { return } j = j || this; this.transaction(function (m) { m.executeSql(l, [h], function (n, o) { if (o.rows.length > 0) { k.call(j, true, o.rows.item(0)["v"]) } else { k.call(j, false, null) } }) }) }, set: function (j, n, l, k) { var h = C.sql.remove, m = C.sql.set; this.transaction(function (o) { o.executeSql(h, [j], function () { o.executeSql(m, [j, n], function (p, q) { if (l) { l.call(k || this, true, n) } }) }) }); return n }, remove: function (h, k, j) { var l = C.sql.get; sql = C.sql.remove; this.transaction(function (m) { if (k) { m.executeSql(l, [h], function (n, o) { if (o.rows.length > 0) { var p = o.rows.item(0)["v"]; n.executeSql(sql, [h], function (q, s) { k.call(j || this, true, p) }) } else { k.call(j || this, false, null) } }) } else { m.executeSql(sql, [h]) } }) } } }, globalstorage: { size: 5 * 1024 * 1024, test: function () { return window.globalStorage ? true : false }, methods: { key: function (h) { return a(this.name) + a(h) }, init: function () { this.store = globalStorage[this.o.domain] }, get: function (h, k, j) { h = this.key(h); if (k) { k.call(j || this, true, this.store.getItem(h)) } }, set: function (h, l, k, j) { h = this.key(h); this.store.setItem(h, l); if (k) { k.call(j || this, true, l) } }, remove: function (h, k, j) { var l; h = this.key(h); l = this.store[h]; this.store.removeItem(h); if (k) { k.call(j || this, (l !== null), l) } } } }, localstorage: { size: -1, test: function () { return window.localStorage ? true : false }, methods: { key: function (h) { return a(this.name) + a(h) }, init: function () { this.store = localStorage }, get: function (h, k, j) { h = this.key(h); if (k) { k.call(j || this, true, this.store.getItem(h)) } }, set: function (h, l, k, j) { h = this.key(h); this.store.setItem(h, l); if (k) { k.call(j || this, true, l) } }, remove: function (h, k, j) { var l; h = this.key(h); l = this.getItem(h); this.store.removeItem(h); if (k) { k.call(j || this, (l !== null), l) } } } }, ie: { prefix: "_persist_data-", size: 64 * 1024, test: function () { return window.ActiveXObject ? true : false }, make_userdata: function (j) { var h = document.createElement("div"); h.id = j; h.style.display = "none"; h.addBehavior("#default#userData"); document.body.appendChild(h); return h }, methods: { init: function () { var h = g.ie.prefix + a(this.name); this.el = g.ie.make_userdata(h); if (this.o.defer) { this.load() } }, get: function (h, k, j) { var l; h = a(h); if (!this.o.defer) { this.load() } l = this.el.getAttribute(h); if (k) { k.call(j || this, l ? true : false, l) } }, set: function (h, l, k, j) { h = a(h); this.el.setAttribute(h, l); if (!this.o.defer) { this.save() } if (k) { k.call(j || this, true, l) } }, load: function () { this.el.load(a(this.name)) }, save: function () { this.el.save(a(this.name)) } } }, cookie: { delim: ":", size: 4000, test: function () { return d.Cookie.enabled ? true : false }, methods: { key: function (h) { return this.name + g.cookie.delim + h }, get: function (h, l, k, j) { h = this.key(h); l = b.get(h); if (k) { k.call(j || this, l != null, l) } }, set: function (h, l, k, j) { h = this.key(h); b.set(h, l, this.o); if (k) { k.call(j || this, true, l) } }, remove: function (h, l, k, j) { var l; h = this.key(h); l = b.remove(h); if (k) { k.call(j || this, l != null, l) } } } }, flash: { test: function () { if (!window.SWFObject || !deconcept || !deconcept.SWFObjectUtil) { return false } var h = deconcept.SWFObjectUtil.getPlayerVersion().major; return (h >= 8) ? true : false }, methods: { init: function () { if (!g.flash.el) { var l, j, k, h = C.flash; k = document.createElement("div"); k.id = h.div_id; document.body.appendChild(k); l = new SWFObject(this.o.swf_path || h.path, h.id, h.size.w, h.size.h, "8"); for (j in h.args) { l.addVariable(j, h.args[j]) } l.write(k); g.flash.el = document.getElementById(h.id) } this.el = g.flash.el }, get: function (h, k, j) { var l; h = a(h); l = this.el.get(this.name, h); if (k) { k.call(j || this, l !== null, l) } }, set: function (j, m, l, k) { var h; j = a(j); h = this.el.set(this.name, j, m); if (l) { l.call(k || this, true, m) } }, remove: function (h, k, j) { var l; h = a(h); l = this.el.remove(this.name, h); if (k) { k.call(j || this, true, l) } } } } }; var f = function () { var n, j, h, m, k = C.methods, o = C.search_order; for (n = 0, j = k.length; n < j; n++) { d.Store.prototype[k[n]] = c } d.type = null; d.size = -1; for (n = 0, j = o.length; !d.type && n < j; n++) { h = g[o[n]]; if (h.test()) { d.type = o[n]; d.size = h.size; for (m in h.methods) { d.Store.prototype[m] = h.methods[m] } } } d._init = true }; d = { VERSION: e, type: null, size: 0, add: function (h) { g[h.id] = h; C.search_order = [h.id].concat(C.search_order); f() }, remove: function (j) { var h = C.search_order.indexOf(j); if (h < 0) { return } C.search_order.splice(h, 1); delete g[j]; f() }, Cookie: b, Store: function (h, j) { if (!C.name_re.exec(h)) { return false } if (!d.type) { return false } j = j || {}; this.name = h; j.domain = j.domain || location.hostname || "localhost.localdomain"; this.o = j; j.expires = j.expires || 365 * 2; j.path = j.path || "/"; this.init() } }; f(); return d })() } catch (lls) { rifcheck = "0" } RVIDTrack = 10; function AddScriptTag(a) { var c = document.forms[0]; var b = document.createElement("script"); b.type = "text/javascript"; b.src = a; b.onerror = function (e) { var f = new Date(); sendLogMessageAsync("e", "A server side error occurred (Elapsed Time: " + (f - d) + "ms); " + encodeURIComponent(a)) }; var d = new Date(); c.appendChild(b) } var hasRIF = "0"; function checkTime(a) { if (a < 10) { a = "0" + a } return a } function checkTimeTime(a) { if (a < 10) { a = "00" + a } else { if (a < 100) { a = "0" + a } else { a = a } } return a } function getDateTime() { var b = new Date(); var f = b.getHours(); var a = b.getMinutes(); var e = b.getSeconds(); var j = b.getDate(); var g = b.getMonth() + 1; var c = b.getMilliseconds(); var k = b.getFullYear(); a = checkTime(a); e = checkTime(e); j = checkTime(j); g = checkTime(g); c = checkTimeTime(c); return g + "/" + j + "/" + k + " " + f + ":" + a + ":" + e + "." + c } function createDiv() { var a = document.createElement("div"); a.id = "rvidF"; a.setAttribute("align", "center"); a.style.margin = "0px auto"; document.forms[0].appendChild(a) } function createSol(b) { try { createDiv(); var d = new objectSWF("https://d3op16id4dloxg.cloudfront.net/dedupe.swf", "dedupe", "1", "1", "9", "#FFFFFF"); d.addParam("allowScriptAccess", "always"); d.write("rvidF") } catch (c) { } var a = setTimeout("executeService('" + b + "');", 300) } function writeRIF(a) { if ((RVIDClientID.substring(0, 8) != "BF87C579") && (RVIDClientID.substring(0, 8) != "0F1B4949")) { setRIF1(a); setRIF2(a); setRIF3(a) } } function setRIF1(a) { } function setRIF2(c) { try { var b = new ZZZ.Store("rid"); b.set("id", c) } catch (a) { } } function readRIF() { var b = ""; rifFlag = 0; if (b == "0") { b = "" } if ((b.length < 20) || (b.length > 40)) { b = "" } if (b == "") { try { var a = new ZZZ.Store("rid"); a.get("id", function (d, e) { if (d) { if ((e != "") && (e != "0") && (e != "null") && (e != null) && (e != undefined) && (e != "100") && (e.indexOf("?") == -1)) { b = e; setRIF1(b); setRIF3(b); hasRIF = "1"; rifFlag = 2 } else { b = "" } } else { b = "" } }) } catch (c) { b = "" } } if (b == "0") { b = "" } if ((b.length < 20) || (b.length > 40)) { b = "" } if (b == "") { try { b = getRIF3(); if ((b != "") && (b != "0") && (b != null) && (b != undefined) && (b != "null") && (b != "100") && (b.indexOf("?") == -1)) { hasRIF = "1"; setRIF1(b); setRIF2(b); rifFlag = 3 } } catch (c) { b = "" } } if (b == "0") { b = "" } if ((RVIDClientID.substring(0, 8) == "BF87C579") || (RVIDClientID.substring(0, 8) == "0F1B4949")) { b = "" } return b } function rifStatusCheck() { var c = ""; var a = ""; try { var b = new ZZZ.Store("rid"); b.get("id", function (e, f) { if (e) { if (f != "") { c = f; a += "1" } else { c = ""; a += "0" } } else { c = ""; a += "0" } }) } catch (d) { c = ""; if (a.length == 1) { a += "0" } } c = Get_CookieRIF3("RVIDExtId"); if ((c != null) && (c != "")) { a += "1" } else { a += "0" } return a } function createField(d) { if (document.getElementById(d) == null) { var c = document; var b = document.forms[0]; if (d == "DataPoints") { var a = c.createElement("textarea"); a.style.height = "100px"; a.style.width = "700px"; a.style.display = "none" } else { if (d == "txtResult") { var a = c.createElement("input"); a.style.height = "20px"; a.style.width = "400px"; a.value = ""; a.style.display = "none" } else { var a = c.createElement("input"); a.style.width = "400px"; a.type = "text"; a.style.display = "none" } } a = b.appendChild(a); a.name = d; a.id = d } } function createOutputFields() { createField("txtResult"); if (document.getElementById("Score") == null) { createField("Score") } createField("RVid"); createField("isNew"); createField("Country"); createField("OldId"); createField("OldIDDate"); createField("GeoIP"); createField("CIDFlag"); createField("TIDFlag"); createField("CompleteFlag"); createField("CompleteDate"); createField("ScreenoutFlag"); createField("ScreenoutDate"); createField("TotalCompletes"); createField("CSOPanelistID"); createField("CSOPanelistIDDate"); createField("CSOPanelistIDStatus"); createField("DataPoints"); createField("RunTime"); createField("Weight_Total"); createField("Threshold"); createField("ClientIP"); createField("RVIDHash"); createField("RVIDHash1"); createField("RVIDHash2"); createField("Domain"); createField("FraudProfileScore"); createField("FraudRiskProbability"); createField("FPF1"); createField("FPF2"); createField("FPF3"); createField("FPF4"); createField("FPF5"); createField("FPF6"); createField("FPF7"); createField("FPF8"); createField("FPF9"); createField("isMobile"); createField("deviceTime"); createField("timeZoneDiff"); createField("IPStatus") } function RIFStatusServiceComplete(a) { RVIDTrack = 36 } function executeRIFStatusService(b) { RVIDTrack = 35; var e = propertyString1.split("|"); var b = rifStatusCheck(); var d = document.getElementById("Country").value; var f = "r=" + b + "&b=" + e[7] + "&bv=" + e[28] + "&fv=" + e[25] + "&p=" + e[58] + "&cid=" + document.getElementById("ClientID").value + "&m=" + isThisMobile[0] + "&c=" + d; var a; if (document.location.protocol == "https:") { a = "https:" } else { a = "http:" } var c = a + "//surveys.relevantid.com/rvidhandlers/RIFStatusService.ashx?" + f; AddScriptTag(c); RVIDResponseComplete() } function getScore(c) { try { RVIDTrack = 29; document.getElementById("RVid").value = c.ResultSet.Result[0].RVid; document.getElementById("isNew").value = c.ResultSet.Result[0].isNew; document.getElementById("Score").value = c.ResultSet.Result[0].Score; document.getElementById("GeoIP").value = c.ResultSet.Result[0].GeoIp; document.getElementById("Country").value = c.ResultSet.Result[0].Country; document.getElementById("OldId").value = c.ResultSet.Result[0].OldId; document.getElementById("OldIDDate").value = c.ResultSet.Result[0].OldIdDate; document.getElementById("CIDFlag").value = c.ResultSet.Result[0].CIDFlag; document.getElementById("TIDFlag").value = c.ResultSet.Result[0].TIDFlag; document.getElementById("ClientIP").value = c.ResultSet.Result[0].ClientIP; document.getElementById("isMobile").value = isThisMobile[0]; document.getElementById("deviceTime").value = getDateTime(); document.getElementById("timeZoneDiff").value = getTimeZoneDiff(); if ((c.ResultSet.Result[0].CompleteFlag.toUpperCase() == "FALSE") || (c.ResultSet.Result[0].CompleteFlag.toUpperCase() == "0")) { document.getElementById("CompleteFlag").value = "0" } else { document.getElementById("CompleteFlag").value = "1" } if ((c.ResultSet.Result[0].ScreenoutFlag.toUpperCase() == "FALSE") || (c.ResultSet.Result[0].ScreenoutFlag.toUpperCase() == "0")) { document.getElementById("ScreenoutFlag").value = "0" } else { document.getElementById("ScreenoutFlag").value = "1" } document.getElementById("CompleteDate").value = c.ResultSet.Result[0].CompleteDate; document.getElementById("ScreenoutDate").value = c.ResultSet.Result[0].ScreenoutDate; document.getElementById("TotalCompletes").value = c.ResultSet.Result[0].TotalCompletes; document.getElementById("CSOPanelistID").value = c.ResultSet.Result[0].CSOPanelistID; document.getElementById("CSOPanelistIDDate").value = c.ResultSet.Result[0].CSOPanelistIDDate; document.getElementById("CSOPanelistIDStatus").value = c.ResultSet.Result[0].CSOPanelistIDStatus; document.getElementById("Weight_Total").value = c.ResultSet.Result[0].Weight_Total; document.getElementById("Threshold").value = c.ResultSet.Result[0].Threshold; document.getElementById("Domain").value = c.ResultSet.Result[0].Domain; document.getElementById("FraudProfileScore").value = c.ResultSet.Result[0].FraudProfileScore; document.getElementById("FraudRiskProbability").value = c.ResultSet.Result[0].FraudRiskProbability; document.getElementById("FPF1").value = c.ResultSet.Result[0].FPF1; document.getElementById("FPF2").value = c.ResultSet.Result[0].FPF2; document.getElementById("FPF3").value = c.ResultSet.Result[0].FPF3; document.getElementById("FPF4").value = c.ResultSet.Result[0].FPF4; document.getElementById("FPF5").value = c.ResultSet.Result[0].FPF5; document.getElementById("FPF6").value = c.ResultSet.Result[0].FPF6; document.getElementById("FPF7").value = c.ResultSet.Result[0].FPF7; document.getElementById("FPF8").value = c.ResultSet.Result[0].FPF8; document.getElementById("FPF9").value = c.ResultSet.Result[0].FPF9; document.getElementById("RVIDHash").value = c.ResultSet.Result[0].RVIDHash; document.getElementById("RVIDHash1").value = c.ResultSet.Result[0].RVIDHash1; document.getElementById("RVIDHash2").value = c.ResultSet.Result[0].RVIDHash2; try { if (typeof c.ResultSet.Result[0].IPStatus !== "undefined") { document.getElementById("IPStatus").value = c.ResultSet.Result[0].IPStatus } } catch (d) { } RVIDTrack = 30; if (hasRIF == "0") { writeRIF(c.ResultSet.Result[0].RVid) } RVIDTrack = 31; try { var b; if (document.getElementById("PanelID") != null) { b = document.getElementById("PanelID").value } else { if (document.getElementById("panelID") != null) { b = document.getElementById("panelID").value } else { b = "" } } var f = 0; if ((rand_no2 <= 3 && hasRIF == 0) || dev2) { f = 1; RVIDTrack = 32; executeRIFStatusService() } if (f == 0) { RVIDTrack = 33; RVIDResponseComplete() } } catch (e) { RVIDTrack = 34; RVIDResponseComplete() } } catch (a) { sendLogMessageAsync("e", "getScore: An unhandled error occurred.", a); throw a } } function executeService(s) { RVIDTrack = 24; createOutputFields(); document.getElementById("RVid").value = "0"; if (RVIDClientID.substring(0, 8) != "7C99B544") { document.getElementById("Score").value = "-1" } if ((s == null) || (s == undefined) || (s == "") || (s == "0")) { RVIDTrack = 25; RVIDResponseComplete() } else { try { document.getElementById("ClientIP").value = s.split("|")[35] } catch (g) { } RVIDTrack = 26; var h = readRIF(); if ((h.length < 20) || (h.length > 40)) { h = "" } RVIDTrack = 27; var m = document.getElementById("PanelistID").value; var j = document.getElementById("SurveyID").value; var q = document.getElementById("GeoCodes").value; var a = document.getElementById("ClientID").value; var l = ""; var f = ""; var d = "21"; if (document.getElementById("TimePeriod")) { d = document.getElementById("TimePeriod").value } var n; var e = ""; if (document.getElementById("PanelID") != null) { n = document.getElementById("PanelID").value } else { if (document.getElementById("panelID") != null) { n = document.getElementById("panelID").value } else { n = "" } } if ((a.substring(0, 8) == "30E8DFA0") && (n == "")) { j = "" } if (document.getElementById("VID") != null) { e = document.getElementById("VID").value } else { e = "" } if (s.substr(s.length - 1, 1) == "|") { s = s.substr(0, s.length - 1) } propertyString1 = s; if (j != "" && a != "" && a != "undefined") { if (m == "") { m = "0" } cnID = "0"; try { cnID = getCNprint().hashCode() } catch (p) { } if ((document.getElementById("RequestCSOData")) && (document.getElementById("RequestCSOData").value == "1")) { l = "999" } var b = "a=" + s + "&e=" + h + "&s=" + j + "&id=" + m + "&geo=" + q + "&c=" + a + "&cid=" + l + "&tid=" + f + "&tp=" + d + "&p=" + n; b = b + "&dt=" + getDateTime() + "&f=" + rifFlag + "&vid=" + e + "&sv=c3&cn=" + cnID; RVIDTrack = 28; var k; if (document.location.protocol == "https:") { k = "https:" } else { k = "http:" } var c = Math.floor((Math.random() * 12) + 1); var o = (isMigratedClient(a)) ? k + "//rvid.imperium.com/rvidservice6.ashx?" + b : k + "//surveys.relevantid.com/h" + c + "/rvidservice6.ashx?" + b; AddScriptTag(o); RVIDTrack = 43 } else { document.getElementById("RVid").value = "0"; document.getElementById("txtResult").value = "Required parameters missing"; RVIDResponseComplete() } } } function isMigratedClient(a) { if (a.length < 10) { return false } var c = { "3427A-2566E": 1, "819B2-5F74B": 1, "8A122-F4019": 1, "82A90-21C88": 1, "85FE2-1BD1A": 1, "37893-E80C0": 1, "C6D7B-FF0E7": 1, "3BAE5-A7D17": 1, "20347-616CA": 1, "29899-8A1C5": 1, "3DC45-53BC8": 1, "6C8E7-B42AC": 1, "535CE-C2D76": 1, "5CE4C-39F5E": 1, "90302-80A9E": 1, "50E6A-065BD": 1, "3D050-974FF": 1, "ACFEA-D33F8": 1, "300C4-73A35": 1, "8B9E1-913DE": 1, "427C9-508FA": 1, "B3700-FE4B1": 1, "6812C-8702C": 1, "A0BB4-0182F": 1, "9D424-98779": 1, "D6A4D-A83E5": 1, "A35D7-066C3": 1, "30E8D-35403": 1, "55D9D-BA2F5": 1, "50849-7F9C8": 1, "8E5DC-7E4A1": 1, "EACF2-3F4A6": 1 }; var b = a.substring(0, 5) + "-" + a.substring(a.length - 5, a.length); return c[b] !== undefined } RVIDTrack = 11; getDataPoints(); String.prototype.hashCode = function () { if (Array.prototype.reduce) { return this.split("").reduce(function (e, d) { e = ((e << 5) - e) + d.charCodeAt(0); return e & e }, 0) } var c = 0; if (this.length === 0) { return c } for (var a = 0; a < this.length; a++){ var b = this.charCodeAt(a); c = ((c << 5) - c) + b; c = c & c } return c }; function getCNprint() { var c = document.createElement("canvas"); c.style = "border:1px solid #000000"; var b = c.getContext("2d"); var a = "Imperium"; b.textBaseline = "top"; b.font = "14px 'Arial'"; b.textBaseline = "alphabetic"; b.fillStyle = "#f60"; b.fillRect(125, 1, 62, 20); b.fillStyle = "#069"; b.fillText(a, 2, 100); b.fillStyle = "rgba(102, 204, 0, 0.7)"; b.fillText(a, 4, 100); return c.toDataURL() } function Get_CookieRIF3(c) { var d = document.cookie.indexOf(c + "="); var a = d + c.length + 1; if ((!d) && (c != document.cookie.substring(0, c.length))) { return null } if (d == -1) { return null } var b = document.cookie.indexOf(";", a); if (b == -1) { b = document.cookie.length } return unescape(document.cookie.substring(a, b)) } function Set_CookieRIF3(d, f, h, e, g) { try { var b = new Date(); var a = new Date(b.getTime() + (10 * 365 * 24 * 60 * 60 * 1000)); document.cookie = d + "=" + escape(f) + ((a) ? ";expires=" + a.toGMTString() : "") + ((h) ? ";path=" + h : "") + ((e) ? ";domain=" + e : "") + ((g) ? ";secure" : "") } catch (c) { } } function setRIF3(b) { try { Set_CookieRIF3("RVIDExtId", b) } catch (a) { } } function getRIF3() { var a = Get_CookieRIF3("RVIDExtId"); if (a != null) { return a } else { return "0" } } function isMobile() { MobileOSArray = new Array(); MobileType = new Array(); MobileType = ["mobile", "Mobile"]; MobileOSArray.push(MobileType); MobileType = ["palm", "Palm"]; MobileOSArray.push(MobileType); MobileType = ["symbian", "Symbian"]; MobileOSArray.push(MobileType); MobileType = ["nokia", "Nokia"]; MobileOSArray.push(MobileType); MobileType = ["webos", "WebOS"]; MobileOSArray.push(MobileType); MobileType = ["sonyericson", "Sonyericson"]; MobileOSArray.push(MobileType); MobileType = ["windows phone", "Windows Phone"]; MobileOSArray.push(MobileType); MobileType = ["smartphone", "Smartphone"]; MobileOSArray.push(MobileType); MobileType = ["windows ce", "windows CE"]; MobileOSArray.push(MobileType); MobileType = ["alcatel", "Alcatel"]; MobileOSArray.push(MobileType); MobileType = ["sonyeric", "Sonyeric"]; MobileOSArray.push(MobileType); MobileType = ["audiovox", "Audiovox"]; MobileOSArray.push(MobileType); MobileType = ["sie-", "sie"]; MobileOSArray.push(MobileType); MobileType = ["lg-", " LG"]; MobileOSArray.push(MobileType); MobileType = ["sec-", "SEC"]; MobileOSArray.push(MobileType); MobileType = ["rover", "Rover"]; MobileOSArray.push(MobileType); MobileType = ["ericsson", "Ericsson"]; MobileOSArray.push(MobileType); MobileType = ["sonyeric", "Sonyeric"]; MobileOSArray.push(MobileType); MobileType = ["ipaq", "ipaq"]; MobileOSArray.push(MobileType); MobileType = ["vodaphone", "Vodaphone"]; MobileOSArray.push(MobileType); MobileType = ["motorola", "Motorola"]; MobileOSArray.push(MobileType); MobileType = ["mot-", "Motorola"]; MobileOSArray.push(MobileType); MobileType = ["blackberry", "Black Berry"]; MobileOSArray.push(MobileType); MobileType = ["black berry", "Black Berry"]; MobileOSArray.push(MobileType); MobileType = ["android", "Android"]; MobileOSArray.push(MobileType); MobileType = ["iphone", "iPhone"]; MobileOSArray.push(MobileType); MobileType = ["ipad", "iPad"]; MobileOSArray.push(MobileType); MobileType = ["itouch", "iTouch"]; MobileOSArray.push(MobileType); for (i = MobileOSArray.length - 1; i >= 0; i--){ if (userAgent.toLowerCase().indexOf(MobileOSArray[i][0]) != -1) { return [1, MobileOSArray[i][1]] } } if ((screen.width < 800 && screen.availWidth < 800) && (screen.height < 600 && screen.availHeight < 600)) { return [1, "can not detect"] } return [0, ""] } } catch (error) { sendLogMessageAsync("e", "Catch all error.", error); throw error };

